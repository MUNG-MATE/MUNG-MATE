-- 1. 오라클 아이디 먼저 만들기( 밑에 SQL 아이디만들기 ) 

-- 2. 밑에 테이블 구문 다 돌리기&시퀀스 추가하기

-- 3. 홈페이지에서 회원가입먼저 진행한후 4번수행 해야함(주소 상세주소까지입력!) 

-- 4. 더미 데이터 추가하기

------------------------------ SQL 아이디 만들기 ---------------------------------
-- ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

-- 계정 생성
-- CREATE USER mung IDENTIFIED BY "mung1234";

-- 권한 부여
-- GRANT CONNECT, RESOURCE, CREATE VIEW TO mung;

-- 객체 생성 공간 할당
-- ALTER USER mung DEFAULT TABLESPACE SYSTEM
-- QUOTA UNLIMITED ON SYSTEM;

-------------------------------------------------------------------------------

CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_NM"	VARCHAR2(30)		NOT NULL,
	"MEMBER_EMAIL"	VARCHAR2(100)		NOT NULL,
	"MEMBER_NICKNAME"	VARCHAR2(100)		NOT NULL,
	"MEMBER_PW"	VARCHAR2(100)		NOT NULL,
	"MEMBER_TEL"	VARCHAR2(30)		NOT NULL,
	"MEMBER_ADDRESS"	VARCHAR2(500)		NOT NULL,
	"ENROLL_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"SECESSION_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_ADMIN"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_PETSITTER"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"PROFILE_IMG"	VARCHAR2(4000)		NULL
);

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "MEMBER"."MEMBER_NM" IS '회원이름';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '이메일';

COMMENT ON COLUMN "MEMBER"."MEMBER_NICKNAME" IS '닉네임';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원비밀번호';

COMMENT ON COLUMN "MEMBER"."MEMBER_TEL" IS '전화번호';

COMMENT ON COLUMN "MEMBER"."MEMBER_ADDRESS" IS '주소';

COMMENT ON COLUMN "MEMBER"."ENROLL_DATE" IS '가입일';

COMMENT ON COLUMN "MEMBER"."SECESSION_FL" IS '탈퇴(N,Y)';

COMMENT ON COLUMN "MEMBER"."MEMBER_ADMIN" IS '관리자(N,Y)';

COMMENT ON COLUMN "MEMBER"."MEMBER_PETSITTER" IS '펫시터(N,Y)';

COMMENT ON COLUMN "MEMBER"."PROFILE_IMG" IS '프로필 이미지';

CREATE TABLE "BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"BOARD_TITLE"	VARCHAR2(300)		NOT NULL,
	"BOARD_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"BOARD_DT"	DATE	DEFAULT SYSDATE	NOT NULL,
	"READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"BOARD_ST"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"BOARD_CD"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글번호';

COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '게시글제목';

COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '게시글내용';

COMMENT ON COLUMN "BOARD"."BOARD_DT" IS '작성일';

COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';

COMMENT ON COLUMN "BOARD"."BOARD_ST" IS '게시글상태(정상N,삭제Y)';

COMMENT ON COLUMN "BOARD"."BOARD_CD" IS '게시판 코드';

COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '회원번호';

CREATE TABLE "BOARD_TYPE" (
	"BOARD_CD"	NUMBER		NOT NULL,
	"BOARD_NM"	VARCHAR2(100)		NOT NULL
);

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_CD" IS '게시판 코드';

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_NM" IS '게시판 이름';

CREATE TABLE "REPLY" (
	"REPLY_NO"	NUMBER		NOT NULL,
	"REPLY_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"CREATE_DT"	DATE	DEFAULT SYSDATE	NOT NULL,
	"REPLY_ST"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"PARENT_NO"	NUMBER		NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REPLY"."REPLY_NO" IS '댓글 번호';

COMMENT ON COLUMN "REPLY"."REPLY_CONTENT" IS '댓글 내용';

COMMENT ON COLUMN "REPLY"."CREATE_DT" IS '댓글 작성일';

COMMENT ON COLUMN "REPLY"."REPLY_ST" IS '댓글 상태(N,Y)';

COMMENT ON COLUMN "REPLY"."PARENT_NO" IS '부모 댓글 번호';

COMMENT ON COLUMN "REPLY"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "REPLY"."BOARD_NO" IS '게시글번호';

CREATE TABLE "BOARD_IMAGE" (
	"BOARD_IMG_NO"	NUMBER		NOT NULL,
	"BOARD_IMG_PATH"	VARCHAR2(4000)		NOT NULL,
	"BOARD_IMG_ORDER"	NUMBER		NOT NULL,
	"BOARD_IMG_RENAME"	VARCHAR2(4000)		NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BOARD_IMAGE"."BOARD_IMG_NO" IS '이미지 번호';

COMMENT ON COLUMN "BOARD_IMAGE"."BOARD_IMG_PATH" IS '이미지 저장 경로+ 변경명';

COMMENT ON COLUMN "BOARD_IMAGE"."BOARD_IMG_ORDER" IS '이미지 위치 지정 번호';

COMMENT ON COLUMN "BOARD_IMAGE"."BOARD_IMG_RENAME" IS '새로저장된 이미지이름';

COMMENT ON COLUMN "BOARD_IMAGE"."BOARD_NO" IS '게시글번호(시퀀스)';

CREATE TABLE "PETSITTER" (
	"PETSITTER_NO"	NUMBER		NOT NULL,
	"LOCATION"	VARCHAR2(200)		NULL,
	"PET_CAREER"	CHAR(10)		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "PETSITTER"."PETSITTER_NO" IS '펫시터번호(시퀀스)';

COMMENT ON COLUMN "PETSITTER"."LOCATION" IS '선호지역';

COMMENT ON COLUMN "PETSITTER"."PET_CAREER" IS '반려동물 경험';

COMMENT ON COLUMN "PETSITTER"."MEMBER_NO" IS '회원번호';

CREATE TABLE "RESERVATION" (
	"RS_NO"	NUMBER		NOT NULL,
	"RS_DATE"	VARCHAR2(1000)		NOT NULL,
	"RS_START_DATE"	VARCHAR2(1000)		NOT NULL,
	"RS_ADDRESS"	VARCHAR2(4000)		NOT NULL,
	"PETSITTER_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"SERVICE_ST"	VARCHAR2(20)	DEFAULT 'N'	NOT NULL,
	"SERVICE_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "RESERVATION"."RS_NO" IS '예약번호';

COMMENT ON COLUMN "RESERVATION"."RS_DATE" IS '방문 날짜';

COMMENT ON COLUMN "RESERVATION"."RS_START_DATE" IS '방문 시간';

COMMENT ON COLUMN "RESERVATION"."RS_ADDRESS" IS '방문 장소';

COMMENT ON COLUMN "RESERVATION"."PETSITTER_NO" IS '펫시터 번호';

COMMENT ON COLUMN "RESERVATION"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "RESERVATION"."SERVICE_ST" IS '서비스 완료 상태';

COMMENT ON COLUMN "RESERVATION"."SERVICE_NO" IS '서비스 번호';

CREATE TABLE "PET" (
	"PET_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PET_NM"	VARCHAR2(30)		NOT NULL,
	"PET_TYPE"	VARCHAR2(300)		NOT NULL,
	"PET_BIRTH"	VARCHAR2(300)		NOT NULL,
	"PET_GENDER"	VARCHAR2(30)		NOT NULL,
	"PET_PROFILE"	VARCHAR2(1000)		NULL,
	"PET_OPTION"	VARCHAR2(4000)		NULL
);

COMMENT ON COLUMN "PET"."PET_NO" IS '반려견 번호(시퀀스)';

COMMENT ON COLUMN "PET"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "PET"."PET_NM" IS '반려견 이름';

COMMENT ON COLUMN "PET"."PET_TYPE" IS '품종';

COMMENT ON COLUMN "PET"."PET_BIRTH" IS '생년월';

COMMENT ON COLUMN "PET"."PET_GENDER" IS '성별';

COMMENT ON COLUMN "PET"."PET_PROFILE" IS '반려견 프로필 사진';

COMMENT ON COLUMN "PET"."PET_OPTION" IS '반려견 특이사항';

CREATE TABLE "REPORT" (
    "REPORT_NO" NUMBER NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PETSITTER_NO"	NUMBER		NOT NULL,
	"REPORT_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"REPORT_DATE"	DATE	DEFAULT SYSDATE	NOT NULL
);

COMMENT ON COLUMN "REPORT"."REPORT_NO" IS '신고번호';

COMMENT ON COLUMN "REPORT"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "REPORT"."PETSITTER_NO" IS '펫시터번호';

COMMENT ON COLUMN "REPORT"."REPORT_CONTENT" IS '신고 내용';

COMMENT ON COLUMN "REPORT"."REPORT_DATE" IS '신고 날짜';

CREATE TABLE "CHATTING_ROOM" (
	"CHAT_NO"	NUMBER		NOT NULL,
	"CHAT_CREATE_DATE"	DATE	DEFAULT  SYSDATE NOT NULL,
	"OPEN_MEMBER"	NUMBER		NOT NULL,
	"PARTICIPANT"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CHATTING_ROOM"."CHAT_NO" IS '채팅방 번호';

COMMENT ON COLUMN "CHATTING_ROOM"."CHAT_CREATE_DATE" IS '채팅방 생성일';

COMMENT ON COLUMN "CHATTING_ROOM"."OPEN_MEMBER" IS '개설자 회원 번호(펫시터)';

COMMENT ON COLUMN "CHATTING_ROOM"."PARTICIPANT" IS '참여자 회원 번호(일반 회원)';

CREATE TABLE "SERVICE_TYPE" (
	"SERVICE_NO"	NUMBER		NOT NULL,
	"SERVICE_TYPE"	VARCHAR2(300)		NOT NULL,
	"SERVICE_TIME"	VARCHAR2(300)		NOT NULL,
	"SERVICE_PRICE"	VARCHAR2(1000)		NOT NULL
);

COMMENT ON COLUMN "SERVICE_TYPE"."SERVICE_NO" IS '서비스 번호';

COMMENT ON COLUMN "SERVICE_TYPE"."SERVICE_TYPE" IS '타입';

COMMENT ON COLUMN "SERVICE_TYPE"."SERVICE_TIME" IS '시간';

COMMENT ON COLUMN "SERVICE_TYPE"."SERVICE_PRICE" IS '금액';

CREATE TABLE "WISH_LIST" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PETSITTER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "WISH_LIST"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "WISH_LIST"."PETSITTER_NO" IS '펫시터번호(시퀀스)';

CREATE TABLE "APPLICATION_TYPE" (
	"APPLICATION_CD"	NUMBER		NOT NULL,
	"APPLICATION_NM"	VARCHAR2(100)		NOT NULL
);

COMMENT ON COLUMN "APPLICATION_TYPE"."APPLICATION_CD" IS '신청 코드';

COMMENT ON COLUMN "APPLICATION_TYPE"."APPLICATION_NM" IS '신청 이름';

CREATE TABLE "APPLICATION" (
	"APPLICATION_NO"	NUMBER		NOT NULL,
	"APPLICATION_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"APPLICATION_DT"	DATE	DEFAULT SYSDATE	NOT NULL,
	"APPLICATION_LOCATION"	VARCHAR2(300)		NULL,
	"APPLICATION_EX"	CHAR(1)		NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"APPLICATION_CD"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "APPLICATION"."APPLICATION_NO" IS '신청 번호';

COMMENT ON COLUMN "APPLICATION"."APPLICATION_CONTENT" IS '신청 내용';

COMMENT ON COLUMN "APPLICATION"."APPLICATION_DT" IS '신청일';

COMMENT ON COLUMN "APPLICATION"."APPLICATION_LOCATION" IS '신청지역';

COMMENT ON COLUMN "APPLICATION"."APPLICATION_EX" IS '반려경험';

COMMENT ON COLUMN "APPLICATION"."MEMBER_NO" IS '회원번호';

COMMENT ON COLUMN "APPLICATION"."APPLICATION_CD" IS '신청 코드';

CREATE TABLE "AUTH_KEY" (
	"AUTH_KEY_NO"	NUMBER		NOT NULL,
	"CODE"	CHAR(6)		NOT NULL,
	"EMAIL"	VARCHAR2(50)		NOT NULL,
	"CREATE_TIME"	DATE DEFAULT SYSDATE NOT NULL
);

COMMENT ON COLUMN "AUTH_KEY"."AUTH_KEY_NO" IS '인증키 구분 번호(SEQ_AUTH_KEY_NO)';

COMMENT ON COLUMN "AUTH_KEY"."CODE" IS '코드';

COMMENT ON COLUMN "AUTH_KEY"."EMAIL" IS '이메일';

COMMENT ON COLUMN "AUTH_KEY"."CREATE_TIME" IS '인증 코드 생성 시간';

CREATE TABLE "CHATTING_MESSAGE" (
	"MESSAGE_NO"	NUMBER		NOT NULL,
	"MESSAGE_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"SENDER_NO"	NUMBER		NOT NULL,
	"SEND_TIME"	DATE		NOT NULL,
	"READ_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"CHAT_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CHATTING_MESSAGE"."MESSAGE_NO" IS '메세지 번호';

COMMENT ON COLUMN "CHATTING_MESSAGE"."MESSAGE_CONTENT" IS '메세지 내용';

COMMENT ON COLUMN "CHATTING_MESSAGE"."SENDER_NO" IS '보낸 회원의 번호';

COMMENT ON COLUMN "CHATTING_MESSAGE"."SEND_TIME" IS '메세지 보낸 시간';

COMMENT ON COLUMN "CHATTING_MESSAGE"."READ_FL" IS '메세지 읽음 여부';

COMMENT ON COLUMN "CHATTING_MESSAGE"."CHAT_NO" IS '채팅방 번호';

CREATE TABLE "RESERVATION_PET" (
	"RS_NO"	NUMBER		NOT NULL,
	"PET_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "RESERVATION_PET"."RS_NO" IS '예약번호';

COMMENT ON COLUMN "RESERVATION_PET"."PET_NO" IS '반려견 번호(시퀀스)';

CREATE TABLE "LIVE_CARD" (
	"LIVE_NO"	NUMBER		NOT NULL,
	"LIVE_CONTENT"	VARCHAR2(4000)		NOT NULL,
    "START_TIME" VARCHAR2(100)   NOT NULL,
    "END_TIME" VARCHAR2(100)   NOT NULL,
	"RS_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "LIVE_CARD"."LIVE_NO" IS '라이브 카드 번호';

COMMENT ON COLUMN "LIVE_CARD"."LIVE_CONTENT" IS '라이브 카드 내용';

COMMENT ON COLUMN "LIVE_CARD"."START_TIME" IS '서비스 시작 시간';

COMMENT ON COLUMN "LIVE_CARD"."END_TIME" IS '서비스 종료 시간';

COMMENT ON COLUMN "LIVE_CARD"."RS_NO" IS '예약번호';

CREATE TABLE "PAYMENT" (
	"PAY_NO"	NUMBER		NOT NULL,
	"PAY_PRICE"	NUMBER		NOT NULL,
	"RS_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "PAYMENT"."PAY_NO" IS '결제번호';

COMMENT ON COLUMN "PAYMENT"."PAY_PRICE" IS '결제금액';

COMMENT ON COLUMN "PAYMENT"."RS_NO" IS '예약번호';

CREATE TABLE "LOCATION_SERVICE" (
	"RS_NO"	NUMBER		NOT NULL,
	"LAT"	NUMBER		NOT NULL,
	"LON"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "LOCATION_SERVICE"."RS_NO" IS '예약번호';

COMMENT ON COLUMN "LOCATION_SERVICE"."LAT" IS '위도';

COMMENT ON COLUMN "LOCATION_SERVICE"."LON" IS '경도';

CREATE TABLE "LIVE_CARD_IMAGE" (
   "IMG_NO"   NUMBER      NOT NULL,
   "IMG_PATH"   VARCHAR2(4000)      NOT NULL,
   "IMG_RENAME"   VARCHAR2(4000)      NOT NULL,
   "IMG_ORIGINAL"   VARCHAR2(4000)      NOT NULL,
   "IMG_ORDER"   NUMBER      NOT NULL,
   "LIVE_NO"   NUMBER      NOT NULL
);

COMMENT ON COLUMN "LIVE_CARD_IMAGE"."IMG_NO" IS '이미지 번호(시퀀스)';

COMMENT ON COLUMN "LIVE_CARD_IMAGE"."IMG_PATH" IS '이미지 저장 경로 + 변경명';

COMMENT ON COLUMN "LIVE_CARD_IMAGE"."IMG_RENAME" IS '변경된 이미지 파일 이름';

COMMENT ON COLUMN "LIVE_CARD_IMAGE"."IMG_ORIGINAL" IS '원본 이미지 파일 이름';

COMMENT ON COLUMN "LIVE_CARD_IMAGE"."IMG_ORDER" IS '이미지 순서 번호';

COMMENT ON COLUMN "LIVE_CARD_IMAGE"."LIVE_NO" IS '라이브 카드 번호';

--------------------------- 키 추가 -----------------------------
ALTER TABLE "LIVE_CARD_IMAGE" ADD CONSTRAINT "PK_IMG_NO" PRIMARY KEY (
   "IMG_NO"
);

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "BOARD" ADD CONSTRAINT "PK_BOARD" PRIMARY KEY (
	"BOARD_NO"
);

ALTER TABLE "BOARD_TYPE" ADD CONSTRAINT "PK_BOARD_TYPE" PRIMARY KEY (
	"BOARD_CD"
);

ALTER TABLE "REPLY" ADD CONSTRAINT "PK_REPLY" PRIMARY KEY (
	"REPLY_NO"
);

ALTER TABLE "BOARD_IMAGE" ADD CONSTRAINT "PK_BOARD_IMAGE" PRIMARY KEY (
	"BOARD_IMG_NO"
);

ALTER TABLE "PETSITTER" ADD CONSTRAINT "PK_PETSITTER" PRIMARY KEY (
	"PETSITTER_NO"
);

ALTER TABLE "RESERVATION" ADD CONSTRAINT "PK_RESERVATION" PRIMARY KEY (
	"RS_NO"
);

ALTER TABLE "PET" ADD CONSTRAINT "PK_PET" PRIMARY KEY (
	"PET_NO"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "PK_REPORT" PRIMARY KEY (
	"MEMBER_NO",
	"PETSITTER_NO",
    "REPORT_NO"
    
);

ALTER TABLE "CHATTING_ROOM" ADD CONSTRAINT "PK_CHATTING_ROOM" PRIMARY KEY (
	"CHAT_NO"
);

ALTER TABLE "SERVICE_TYPE" ADD CONSTRAINT "PK_SERVICE_TYPE" PRIMARY KEY (
	"SERVICE_NO"
);

ALTER TABLE "WISH_LIST" ADD CONSTRAINT "PK_WISH_LIST" PRIMARY KEY (
	"MEMBER_NO",
	"PETSITTER_NO"
);

ALTER TABLE "APPLICATION_TYPE" ADD CONSTRAINT "PK_APPLICATION_TYPE" PRIMARY KEY (
	"APPLICATION_CD"
);

ALTER TABLE "APPLICATION" ADD CONSTRAINT "PK_APPLICATION" PRIMARY KEY (
	"APPLICATION_NO"
);

ALTER TABLE "AUTH_KEY" ADD CONSTRAINT "PK_AUTH_KEY" PRIMARY KEY (
	"AUTH_KEY_NO"
);

ALTER TABLE "CHATTING_MESSAGE" ADD CONSTRAINT "PK_CHATTING_MESSAGE" PRIMARY KEY (
	"MESSAGE_NO"
);

ALTER TABLE "RESERVATION_PET" ADD CONSTRAINT "PK_RESERVATION_PET" PRIMARY KEY (
	"RS_NO",
	"PET_NO"
);

ALTER TABLE "LIVE_CARD" ADD CONSTRAINT "PK_LIVE_CARD" PRIMARY KEY (
	"LIVE_NO"
);

ALTER TABLE "PAYMENT" ADD CONSTRAINT "PK_PAYMENT" PRIMARY KEY (
	"PAY_NO"
);

ALTER TABLE "BOARD" ADD CONSTRAINT "FK_BOARD_TYPE_TO_BOARD_1" FOREIGN KEY (
	"BOARD_CD"
)
REFERENCES "BOARD_TYPE" (
	"BOARD_CD"
);

ALTER TABLE "BOARD" ADD CONSTRAINT "FK_MEMBER_TO_BOARD_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REPLY" ADD CONSTRAINT "FK_MEMBER_TO_REPLY_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REPLY" ADD CONSTRAINT "FK_BOARD_TO_REPLY_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "BOARD_IMAGE" ADD CONSTRAINT "FK_BOARD_TO_BOARD_IMAGE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "PETSITTER" ADD CONSTRAINT "FK_MEMBER_TO_PETSITTER_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "RESERVATION" ADD CONSTRAINT "FK_PETSITTER_TO_RESERVATION_1" FOREIGN KEY (
	"PETSITTER_NO"
)
REFERENCES "PETSITTER" (
	"PETSITTER_NO"
);

ALTER TABLE "RESERVATION" ADD CONSTRAINT "FK_MEMBER_TO_RESERVATION_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "RESERVATION" ADD CONSTRAINT "FK_SERVICE_TYPE_TO_RESERVATION_1" FOREIGN KEY (
	"SERVICE_NO"
)
REFERENCES "SERVICE_TYPE" (
	"SERVICE_NO"
);

ALTER TABLE "PET" ADD CONSTRAINT "FK_MEMBER_TO_PET_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "FK_MEMBER_TO_REPORT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "FK_PETSITTER_TO_REPORT_1" FOREIGN KEY (
	"PETSITTER_NO"
)
REFERENCES "PETSITTER" (
	"PETSITTER_NO"
);

ALTER TABLE "CHATTING_ROOM" ADD CONSTRAINT "FK_PETSITTER_TO_CHATTING_ROOM_1" FOREIGN KEY (
	"OPEN_MEMBER"
)
REFERENCES "PETSITTER" (
	"PETSITTER_NO"
);

ALTER TABLE "CHATTING_ROOM" ADD CONSTRAINT "FK_MEMBER_TO_CHATTING_ROOM_1" FOREIGN KEY (
	"PARTICIPANT"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "WISH_LIST" ADD CONSTRAINT "FK_MEMBER_TO_WISH_LIST_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "WISH_LIST" ADD CONSTRAINT "FK_PETSITTER_TO_WISH_LIST_1" FOREIGN KEY (
	"PETSITTER_NO"
)
REFERENCES "PETSITTER" (
	"PETSITTER_NO"
);

ALTER TABLE "APPLICATION" ADD CONSTRAINT "FK_MEMBER_TO_APPLICATION_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "APPLICATION" ADD CONSTRAINT "FK_APPLICATION_TYPE_TO_APPLICATION_1" FOREIGN KEY (
	"APPLICATION_CD"
)
REFERENCES "APPLICATION_TYPE" (
	"APPLICATION_CD"
);

ALTER TABLE "CHATTING_MESSAGE" ADD CONSTRAINT "FK_CHATTING_ROOM_TO_CHATTING_MESSAGE_1" FOREIGN KEY (
	"CHAT_NO"
)
REFERENCES "CHATTING_ROOM" (
	"CHAT_NO"
);

ALTER TABLE "RESERVATION_PET" ADD CONSTRAINT "FK_RESERVATION_TO_RESERVATION_PET_1" FOREIGN KEY (
	"RS_NO"
)
REFERENCES "RESERVATION" (
	"RS_NO"
);

ALTER TABLE "RESERVATION_PET" ADD CONSTRAINT "FK_PET_TO_RESERVATION_PET_1" FOREIGN KEY (
	"PET_NO"
)
REFERENCES "PET" (
	"PET_NO"
);

ALTER TABLE "LIVE_CARD" ADD CONSTRAINT "FK_RESERVATION_TO_LIVE_CARD_1" FOREIGN KEY (
	"RS_NO"
)
REFERENCES "RESERVATION" (
	"RS_NO"
);

ALTER TABLE "PAYMENT" ADD CONSTRAINT "FK_RESERVATION_TO_PAYMENT_1" FOREIGN KEY (
	"RS_NO"
)
REFERENCES "RESERVATION" (
	"RS_NO"
);

ALTER TABLE "LOCATION_SERVICE" ADD CONSTRAINT "FK_RESERVATION_TO_LOCATION_SERVICE_1" FOREIGN KEY (
	"RS_NO"
)
REFERENCES "RESERVATION" (
	"RS_NO"
);

COMMIT;