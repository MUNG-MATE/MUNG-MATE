<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AdministratorMapper">

	<resultMap type="Member" id="member_rm">
		<!-- DB에 기본 키(PRIMARY KEY, 복합키면 여러개 작성) -->
		<id property="memberNo" column="MEMBER_NO" />

		<!-- DB에 일반 컬럼들 -->
		<result property="memberName" column="MEMBER_NM" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberTel" column="MEMBER_TEL" />
		<result property="memberAddress" column="MEMBER_ADDRESS" />
		<result property="enrollDate" column="ENROLL_DATE" />
		<result property="sessionFlag" column="SECESSION_FL" />
		<result property="adminFlag" column="MEMBER_ADMIN" />
		<result property="petsitterFlag" column="MEMBER_PETSITTER" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="rsNo" column="RS_NO" />
		<result property="rsDate" column="RS_DATE" />
		<result property="rsStartDate" column="RS_START_DATE" />
		<result property="servicePrice" column="SERVICE_PRICE" />
		<result property="serviceTime" column="SERVICE_TIME" />
		<result property="serviceSt" column="SERVICE_ST" />
		<result property="petsitterNo" column="PETSITTER_NO" />
		<result property="reportContent" column="REPORT_CONTENT" />
		<result property="reportDate" column="REPORT_DATE" />
		<result property="reportNo" column="REPORT_NO" />
	</resultMap>
	
	<resultMap type="PetSitter" id="petSitter_rm">
  	
  		<id property="petSitterNo" column="PETSITTER_NO" />

  		<result property="location" column="LOCATION" />
  		<result property="career" column="CAREER" />
  		<result property="memberNo" column="MEMBER_NO" />
  		<result property="memberTel" column="MEMBER_TEL" />
  		<result property="memberEmail" column="MEMBER_EMAIL" />
  		<result property="memberAddress" column="MEMBER_Address" />
  		<result property="enrollDate" column="ENROLL_DATE" />
  		<result property="profileImg" column="PROFIlE_IMG" />
  		<result property="memberNm" column="MEMBER_NM" />
  	</resultMap>
  	
  	<resultMap type="Reservation" id="Reservation_rm">
		<id property="rsNo" column="RS_NO" />
		
		<result property="rsDate" column="RS_DATE" />
		<result property="rsStartDate" column="RS_START_TIME" />
		<result property="petSitterNo" column="PETSITTER_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="serviceType" column="SERVICE_TYPE" />
		<result property="serviceTime" column="SERVICE_TIME" />
		<result property="servicePrice" column="SERVICE_PRICE" />
	</resultMap>

	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_NO != '999'
	</select>
	<select id="mungCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_NO != '999'
	</select>
	<select id="petCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_PETSITTER = 'Y'
		AND SECESSION_FL = 'N'
	</select>
	<select id="commonCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE SECESSION_FL = 'N'
		AND MEMBER_PETSITTER != 'Y'
		AND MEMBER_NO != '999'
	</select>
	<select id="flagCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE SECESSION_FL ='Y'
	</select>
	
	
	<select id="selectManagementList" resultMap="member_rm">
		SELECT
		MEMBER_NO,MEMBER_EMAIL,MEMBER_NM,MEMBER_TEL,ENROLL_DATE,
		MEMBER_PETSITTER,SECESSION_FL FROM MEMBER
		WHERE MEMBER_NO != '999'
		ORDER BY MEMBER_NO
	</select>
	
	<!-- 검색  -->
	<select id="getListCount_search" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		
		<if test='managementType == "전체"'>
		WHERE
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
        AND MEMBER_NO != '999'
			ORDER BY SECESSION_FL
		</if>
		<choose>
			<when test='managementType == "일반회원"' >
				WHERE SECESSION_FL = 'N'
				AND MEMBER_PETSITTER ='N'
				AND 
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
        		AND MEMBER_NO != '999'
			</when>
			<when test='managementType == "펫시터"'>
				WHERE MEMBER_PETSITTER ='Y'
				AND SECESSION_FL = 'N'
				AND 
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
			</when>
			<when test='managementType == "탈퇴대기"'>
				WHERE SECESSION_FL = 'Y'
				AND 
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
			</when>
		</choose>
	</select>
	
    <select id="selectManagementList_search" resultMap="member_rm">
		SELECT
		MEMBER_NO,MEMBER_EMAIL,MEMBER_NM,MEMBER_TEL,ENROLL_DATE,
		MEMBER_PETSITTER,SECESSION_FL FROM MEMBER
		<if test='managementType == "전체"'>
			WHERE
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
        AND MEMBER_NO != '999'
        	ORDER BY SECESSION_FL 
		</if>
		<choose>
			<when test='managementType == "일반회원"' >
				WHERE SECESSION_FL = 'N'
				AND MEMBER_PETSITTER ='N'
				AND 
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
        		AND MEMBER_NO != '999'
        		ORDER BY ENROLL_DATE DESC
			</when>
			<when test='managementType == "펫시터"'>
				WHERE MEMBER_PETSITTER ='Y'
				AND SECESSION_FL = 'N'
				AND 
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
        		ORDER BY ENROLL_DATE DESC
			</when>
			<when test='managementType == "탈퇴대기"'>
				WHERE SECESSION_FL = 'Y'
				AND 
        (MEMBER_EMAIL LIKE '%${managementSearch}%' OR MEMBER_NM LIKE '%${managementSearch}%' OR MEMBER_TEL LIKE '%${managementSearch}%')
        		ORDER BY ENROLL_DATE DESC
			</when>
		</choose>
		
	</select>
	<update id="delete">
		UPDATE MEMBER SET
		SECESSION_FL = 'Y'
		WHERE MEMBER_NO = #{item}
	</update>
	
	<select id="selectList" resultMap="member_rm">
		SELECT
		MEMBER_NO,MEMBER_EMAIL,MEMBER_NM,MEMBER_TEL,ENROLL_DATE,
		MEMBER_PETSITTER,SECESSION_FL FROM MEMBER
		ORDER BY SECESSION_FL
	</select>
	
	<select id="petsitterList" resultMap="petSitter_rm">
		SELECT LOCATION,P.MEMBER_NO ,PROFILE_IMG,MEMBER_NM,MEMBER_EMAIL,MEMBER_TEL,
		SUBSTR(MEMBER_ADDRESS,INSTR(MEMBER_ADDRESS, '^^^') + 3,INSTR(MEMBER_ADDRESS, '^^^', 1, 2) - INSTR(MEMBER_ADDRESS, '^^^') - 3) AS MEMBER_ADDRESS,ENROLL_DATE
		FROM PETSITTER P
        LEFT JOIN MEMBER M ON P.MEMBER_NO = M.MEMBER_NO
		WHERE MEMBER_PETSITTER = 'Y'
	</select>
	
	<update id="petsitterDelete">
		UPDATE MEMBER
		SET MEMBER_PETSITTER = 'N'
		WHERE MEMBER_NO = #{petNo} AND MEMBER_NO IN (SELECT MEMBER_NO FROM PETSITTER)
	</update>
	
	<select id="getReserveListCount" resultType="_int">
		SELECT COUNT(*) FROM RESERVATION
	</select>
	
	<select id="selectReserveList" resultMap="member_rm">
		SELECT RS_NO,MEMBER_EMAIL,MEMBER_NM, MEMBER_TEL,RS_DATE,SERVICE_PRICE,SERVICE_ST
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		ORDER BY RS_DATE DESC
	</select>
	
	<!--완료된 예약-->
	<select id="endR" resultType="_int">
		SELECT COUNT(*)
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE SUBSTR(RS_DATE, 1, 10) BETWEEN '2023-01-01' AND TO_CHAR(TRUNC(SYSDATE) - 1, 'YYYY-MM-DD')
	</select>
	
	<!--대기중 예약-->
	<select id="noCompletedR" resultType="_int">
		SELECT COUNT(*)
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
        WHERE SERVICE_ST ='N'
	</select>
	
	<!--오늘 예약-->
	<select id="todayR" resultType="_int">
		SELECT COUNT(*)
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYYMMDD')
	</select>

	<!-- 어제 예약-->
	<select id="yesterdayR" resultType="_int">
		SELECT COUNT(*)
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') = TO_CHAR(SYSDATE -1, 'YYYY-MM-DD')
	</select> 
	
	<!--내일 예약-->
	<select id="tomorrowR" resultType="_int">
		SELECT COUNT(*)
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') = TO_CHAR(SYSDATE + 1, 'YYYY-MM-DD')
	</select>
	
	<!--지난달 예약-->
	<select id="lastMonthR" resultType="_int">
		SELECT COUNT(*)
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') = TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYY-MM-DD'), 'YYYY-MM-DD')
	</select>
	
	<!--이번달 예약-->
	<select id="thisMonthR" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') >= TRUNC(SYSDATE, 'MM') AND TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') <= LAST_DAY(SYSDATE)
		]]>
	</select>
	
	<!-- 다음달 예약-->
	<select id="FMonthR" resultType="_int">
		<![CDATA[
		SELECT COUNT(*)
		FROM RESERVATION R
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') >= TRUNC(ADD_MONTHS(SYSDATE, 1), 'MM')
		AND TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') < ADD_MONTHS(TRUNC(ADD_MONTHS(SYSDATE, 1), 'MM'), 1)
		]]>
	</select> 
	
	<!--지난달 매출-->
	<!-- <select id="lastMonthSales" resultType="_int">
		SELECT SUM(SERVICE_PRICE) AS TOTAL_SERVICE_PRICE
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TRUNC(TO_DATE(RS_DATE, 'YYYY-MM-DD'), 'MM') = TRUNC(ADD_MONTHS(SYSDATE, -1), 'MM')
	</select> -->
	
	<!--이번달 예상매출-->
	<select id="thisMonthSales" resultType="_int">
		SELECT SUM(SERVICE_PRICE) AS TOTAL_SERVICE_PRICE
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TRUNC(TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD'), 'MM') = TRUNC(SYSDATE, 'MM')
	</select>
	
	<!-- 미래매출 -->
	<select id="FtotalSales" resultType="_int">
		SELECT SUM(SERVICE_PRICE) AS TOTAL_SERVICE_PRICE
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD') >= TRUNC(SYSDATE) + 1
	</select>
	
	<!--총 매출-->
	<select id="totalSales" resultType="_int">
		SELECT SUM(SERVICE_PRICE) AS TOTAL_SERVICE_PRICE
		FROM RESERVATION R
		JOIN SERVICE_TYPE USING(SERVICE_NO)
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		WHERE TO_DATE(SUBSTR(RS_DATE, 1, 10), 'YYYY-MM-DD HH24:MI:SS') BETWEEN TO_DATE('2023-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE('2023-12-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
	</select>
	
	<!-- 신고 펫시터 목록-->
	<select id="declarationList" resultMap="member_rm">
		SELECT MEMBER_NM,MEMBER_NO,PETSITTER_NO FROM MEMBER
		JOIN PETSITTER USING(MEMBER_NO)
		WHERE MEMBER_NO IN (SELECT MEMBER_NO FROM PETSITTER
		WHERE PETSITTER_NO IN (SELECT PETSITTER_NO FROM RESERVATION
		WHERE MEMBER_NO = 1 AND SERVICE_ST = 'Y' AND SERVICE_ST != 'ING'))
        AND MEMBER_NO !='5'
	</select>
	<!-- 신고 펫시터 정보 목록-->
	<select id="declarationPetsitter" resultMap="member_rm">
		SELECT M.MEMBER_NO,MEMBER_NM,RS_DATE,RS_START_DATE,MEMBER_TEL,SERVICE_TIME,SERVICE_PRICE,PROFILE_IMG,P.PETSITTER_NO FROM MEMBER M
        JOIN PETSITTER P ON P.MEMBER_NO = M.MEMBER_NO
        JOIN RESERVATION R ON R.PETSITTER_NO = P.PETSITTER_NO
		JOIN SERVICE_TYPE USING(SERVICE_NO)
        WHERE M.MEMBER_NO =(SELECT MEMBER_NO FROM MEMBER
                WHERE MEMBER_NO = (SELECT MEMBER_NO FROM PETSITTER
                                    WHERE PETSITTER_NO =#{petsitterNo}))
	</select>
	<!-- 신고삽입  -->
	<insert id="declarationInsert">
		<selectKey keyProperty="reportNo" order="BEFORE" resultType="_int">
			SELECT SEQ_REPORT_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO REPORT VALUES (#{reportNo},${memberNo}, ${pet}, #{singo},DEFAULT)
	</insert>
	<!-- 신고목록관리-->
	<select id="reportList" resultMap="member_rm">
		SELECT REPORT_NO,M.MEMBER_NM,R.MEMBER_NO,PETSITTER_NO,REPORT_DATE,REPORT_CONTENT FROM REPORT R
		LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
		ORDER BY REPORT_DATE DESC
	</select>
	<!-- 신고갯수조회 -->
	<select id="reportCount" resultType="_int">
		SELECT COUNT(*) FROM REPORT
	</select>
	
	<select id="check" resultType="_int">
		SELECT COUNT(*) FROM REPORT
		WHERE MEMBER_NO =#{memberNo} AND PETSITTER_NO =#{petNo}
	</select>
		
</mapper>
