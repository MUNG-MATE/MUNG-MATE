<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">
	<!-- Board DTO에 대한 resultMap -->
	<resultMap type="Board" id="board_rm">

		<id property="boardNo" column="BOARD_NO" />

		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardDate" column="BOARD_DT" />
		<result property="boardState" column="BOARD_ST" />
		<result property="reviewStar" column="REVIEW_STAR" />
		<result property="boardCode" column="BOARD_CD" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="imagePath" column="BOARD_IMG_PATH" />
		<result property="imageReName" column="BOARD_IMG_RENAME" />
		<result property="boardName" column="BOARD_NM" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="readCount" column="READ_COUNT" />
		<result property="replyCount" column="REPLY_COUNT" />
		

		<collection property="replyList"
			select="selectReplyList" column="BOARD_NO"
			javaType="java.util.ArrayList" ofType="Reply">
		</collection>
		
		

	</resultMap>

	<resultMap type="BoardImage" id="boardImage_rm">
		<id property="imageNo" column="BOARD_IMG_NO" />

		<result property="imagePath" column="BOARD_IMG_PATH" />
		<result property="imageReName" column="BOARD_IMG_RENAME" />
		<result property="imageOrder" column="BOARD_IMG_ORDER" />
		<result property="boardNo" column="BOARD_NO" />
	</resultMap>

	<!-- reply resultMap -->
	<resultMap type="Reply" id="reply_rm">

		<id property="replyNo" column="REPLY_NO" />

		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replyCreateDate" column="CREATE_DT" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="replyState" column="REPLY_ST" />
		<result property="parentNo" column="PARENT_NO" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="profileImage" column="PROFILE_IMG" />

	</resultMap>

	<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD = 6
		AND BOARD_ST ='N'
	</select>

	<!-- 특정 게시판의 삭제되지 않고, 검색조건이 일치하는 게시글 수 조회 (검색하기) -->
	<select id="getListCount_search" resultType="_int">
		SELECT COUNT(*) FROM BOARD

		<!-- 작성자 검색할 때 필요 -->
		<if test='key == "w"'>
			JOIN MEMBER USING(MEMBER_NO)
		</if>

		WHERE BOARD_CD = 6
		AND BOARD_ST ='N'

		<choose>
			<when test='key =="t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key =="c"'>
				<!-- 내용 -->
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			<when test='key =="tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE
				'%${query}%')
			</when>
			<when test='key =="w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>

	</select>

	<!-- 게시글 목록 조회( 검색하기 ) -->
	<select id="selectReviewList_search" resultMap="board_rm">

		<!-- SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, BOARD_DT,
		(SELECT
		BOARD_IMG_PATH || BOARD_IMG_RENAME FROM BOARD_IMAGE I
		WHERE I.BOARD_NO
		= B.BOARD_NO) BOARD_IMG_PATH
		FROM "BOARD"
		B
		JOIN "MEMBER"
		USING(MEMBER_NO)
		WHERE BOARD_ST = 'N'
		AND BOARD_CD
		= 6 -->
		
		SELECT BOARD_NO, READ_COUNT,
		BOARD_TITLE, MEMBER_NICKNAME, BOARD_DT,
		(SELECT BOARD_IMG_PATH ||
		BOARD_IMG_RENAME FROM BOARD_IMAGE I
		WHERE I.BOARD_NO = B.BOARD_NO)
		BOARD_IMG_PATH,
        (SELECT COUNT(*) FROM REPLY C
		WHERE C.BOARD_NO = B.BOARD_NO)
		REPLY_COUNT
		FROM "BOARD"
		B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE
		BOARD_ST = 'N'
		AND BOARD_CD
		= 6


		<choose>
			<when test='key =="t"'>
				<!-- 제목 -->
				AND BOARD_TITLE LIKE '%${query}%'
			</when>
			<when test='key =="c"'>
				<!-- 내용 -->
				AND BOARD_CONTENT LIKE '%${query}%'
			</when>
			<when test='key =="tc"'>
				<!-- 제목 + 내용 -->
				AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE
				'%${query}%')
			</when>
			<when test='key =="w"'>
				<!-- 작성자(닉네임) -->
				AND MEMBER_NICKNAME LIKE '%${query}%'
			</when>
		</choose>


		ORDER BY BOARD_NO DESC
	</select>

	<!-- 게시글 목록 조회 -->
	<select id="selectReviewList" resultMap="board_rm">
		SELECT BOARD_NO, READ_COUNT,
		BOARD_TITLE, MEMBER_NICKNAME, BOARD_DT,
		(SELECT BOARD_IMG_PATH ||
		BOARD_IMG_RENAME FROM BOARD_IMAGE I
		WHERE I.BOARD_NO = B.BOARD_NO)
		BOARD_IMG_PATH,
        (SELECT COUNT(*) FROM REPLY C
		WHERE C.BOARD_NO = B.BOARD_NO)
		REPLY_COUNT
		FROM "BOARD"
		B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE
		BOARD_ST = 'N'
		AND BOARD_CD
		= 6
		ORDER BY BOARD_DT DESC
	</select>

	<!-- 이미지 목록 조회 -->
	<select id="selectImageListAll" resultMap="boardImage_rm">
		SELECT
		BOARD_IMG_PATH,BOARD_IMG_RENAME,BOARD_NO FROM BOARD_IMAGE
	</select>

	<!-- 게시글 상세 조회 -->
	<select id="selectBoard" resultMap="board_rm">
		SELECT BOARD_NO ,
		BOARD_TITLE, BOARD_CONTENT, MEMBER_NICKNAME,
		MEMBER_NO, PROFILE_IMG, READ_COUNT,
		BOARD_IMG_PATH,
		BOARD_IMG_RENAME,
		TO_CHAR(BOARD_DT, 'YYYY"년" MM"월" DD"일"
		HH24:MI:SS') BOARD_DT
		FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		LEFT JOIN
		BOARD_IMAGE USING(BOARD_NO)
		WHERE BOARD_ST = 'N'
		AND
		BOARD_CD = 6
		AND
		BOARD_NO = ${boardNo}
	</select>

	<!-- 게시글 수정 -->
	<update id="reviewUpdate">
		UPDATE BOARD SET BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent}
		WHERE
		BOARD_CD = 6 AND BOARD_NO =
		#{boardNo}
	</update>

	<!-- 이미지 삭제 -->
	<delete id="imageDelete">
		DELETE FROM BOARD_IMAGE
		WHERE BOARD_NO = #{boardNo}
	</delete>

	<!-- 이미지 수정 -->
	<update id="imageUpdate">
		UPDATE BOARD_IMAGE SET
		BOARD_IMG_PATH = #{imagePath},
		BOARD_IMG_RENAME = #{imageReName}
		WHERE
		BOARD_NO = #{boardNo}
		AND
		BOARD_IMG_ORDER = #{imageOrder}
	</update>

	<!-- 이미지 삽입(1개) -->
	<insert id="imageInsert">
		INSERT INTO BOARD_IMAGE
		VALUES(SEQ_IMG_NO.NEXTVAL,#{imagePath},#{imageOrder},
		#{boardNo},#{imageReName})
	</insert>

	<!-- 게시글 삭제 -->
	<update id="boardDelete">
		UPDATE BOARD
		SET BOARD_ST = 'Y'
		WHERE BOARD_CD = 6
		AND
		BOARD_NO = #{boardNo}
	</update>

	<!-- 게시글 작성 -->
	<insert id="boardInsert" parameterType="BOARD"
		useGeneratedKeys="true">

		<selectKey order="BEFORE" resultType="_int"
			keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO BOARD
		VALUES(
		#{boardNo},#{boardTitle},#{boardContent},DEFAULT, DEFAULT, DEFAULT,
		6,#{memberNo})
	</insert>

	<!-- 이미지 리스트 삽입 -->
	<insert id="insertImageList" parameterType="list">
		INSERT INTO BOARD_IMAGE
		SELECT SEQ_IMG_NO.NEXTVAL, A.*
		FROM(
		<foreach collection="list" item="img" separator=" UNION ALL ">
			SELECT
			#{img.imagePath} BOARD_IMG_PATH,
			#{img.imageOrder} BOARD_IMG_ORDER,
			#{img.boardNo} BOARD_NO,
			#{img.imageReName} BOARD_IMG_RENAME
			FROM DUAL
		</foreach>
		)A
	</insert>

	<!-- 특정 게시글 댓글 조회 -->
	<select id="selectReplyList" resultMap="reply_rm">
		SELECT LEVEL, C.* FROM
		(SELECT REPLY_NO, REPLY_CONTENT,
		TO_CHAR(CREATE_DT,
		'YYYY"년"MM"월"DD"일"HH24"시"MI"분"SS"초"')CREATE_DT,
		BOARD_NO,MEMBER_NO, MEMBER_NICKNAME,PROFILE_IMG, PARENT_NO, REPLY_ST
		FROM REPLY
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo})
		C
		WHERE REPLY_ST = 'N'
		START WITH PARENT_NO IS NULL
		CONNECT BY
		PRIOR REPLY_NO = PARENT_NO
		ORDER SIBLINGS BY REPLY_NO
	</select>

	<!-- 조회수 증가 -->
	<update id="updateReadCount">
		UPDATE BOARD SET READ_COUNT = READ_COUNT + 1
		WHERE
		BOARD_NO = ${boardNo}
	</update>

</mapper>
